{{define "ormQueryCodePgx"}}
{{if .BuildTags}}
//go:build {{.BuildTags}}

{{end}}// Code generated by sqlc. DO NOT EDIT.
{{if not .OmitSqlcVersion}}// versions:
//   sqlc {{.SqlcVersion}}
{{end}}
// QB - query builder
// QC - query clause
// QT - query templater
// UT - update templater
// C - clause
// SQO - select query object
// UQO - update query object
package {{.Package}}
{{ if hasImports .SourceName }}
import (
	{{range imports .SourceName}}
	{{range .}}{{.}}
	{{end}}
	{{end}}
)
{{end}}

type ormQuery interface {
    mustOrmQuery()
    build(*int) (string, []any)
    Build() (string, []any)
}


{{- range .Structs}}
// -------------------------{{.Name}}--------------------------------------------------------------------------------------

{{- $Struct:= .}}

type {{lowerTitle $Struct.Name}}QueryBuilder struct {
    W *{{lowerTitle $Struct.Name}}WhereClauseBuilder
    U *{{lowerTitle $Struct.Name}}FieldSetterBuilder
    T ormTableAlias
    F *{{lowerTitle .Name}}FieldAliases
}

func new{{ $Struct.Name}}QueryBuilder() *{{lowerTitle $Struct.Name}}QueryBuilder {
    return &{{lowerTitle $Struct.Name}}QueryBuilder{
        W: new{{$Struct.Name}}WhereClauseBuilder(),
        U: new{{$Struct.Name}}FieldSetterBuilder(),
        T: {{lowerTitle .Name}}TableAlias,
        F: new{{$Struct.Name}}FieldAliases(),
    }
}

func (b *{{lowerTitle $Struct.Name}}QueryBuilder) Select1() *_query[must{{$Struct.Name}}FieldAlias]{
    return &_query[must{{$Struct.Name}}FieldAlias]{
        alias:  {{lowerTitle $Struct.Name}}TableAlias,
    }
}

func (b *{{lowerTitle $Struct.Name}}QueryBuilder) Select(
fields ...must{{$Struct.Name}}FieldAlias,
) *_query[must{{$Struct.Name}}FieldAlias]{
   if len(fields) == 0 {
        fields = []must{{$Struct.Name}}FieldAlias {
             {{- range $idx,$field := .Fields}}
             {{lowerTitle $Struct.Name}}{{.Name}},
             {{- end}}
         }
   }
   return &_query[must{{$Struct.Name}}FieldAlias]{
        alias:  {{lowerTitle $Struct.Name}}TableAlias,
        fields: fields,
   }
}
func (b *{{lowerTitle $Struct.Name}}QueryBuilder) Update(
setters ...ormUpdateSetter[must{{$Struct.Name}}FieldAlias],
) *_update[must{{$Struct.Name}}FieldAlias]{
    return &_update[must{{$Struct.Name}}FieldAlias]{
        alias:  {{lowerTitle $Struct.Name}}TableAlias,
        setters: setters,
    }
}
func (b *{{lowerTitle $Struct.Name}}QueryBuilder) Delete(
where ...ormQueryClause[must{{$Struct.Name}}FieldAlias],
) *_delete[must{{$Struct.Name}}FieldAlias] {
    return &_delete[must{{$Struct.Name}}FieldAlias]{
        alias:  {{lowerTitle $Struct.Name}}TableAlias,
        whereClauses: where,
    }
}
func (b *{{lowerTitle $Struct.Name}}QueryBuilder) Insert(
setters ...ormInsertSetter[must{{$Struct.Name}}FieldAlias],
) *_insert[must{{$Struct.Name}}FieldAlias]{
    return &_insert[must{{$Struct.Name}}FieldAlias]{
        alias:  {{lowerTitle $Struct.Name}}TableAlias,
        setters: setters,
    }
}

{{end}}

{{end}}
